DROP TABLE IF EXISTS USERS;
CREATE TABLE USERS(
	ID SERIAL,
	NAME VARCHAR(30) NOT NULL,
	EMAIL_ID VARCHAR(50) UNIQUE NOT NULL,
	PASSWORD VARCHAR(50) NOT NULL
);

DROP TABLE IF EXISTS ARTICLES;
CREATE TABLE ARTICLES(
	ID SERIAL,
	USER_ID BIGINT UNSIGNED NOT NULL,
	TITLE VARCHAR(100) NOT NULL,
	CONTENT TEXT NOT NULL,
	CREATION_DATE TIMESTAMP NOT NULL,
	UPDATED_DATE TIMESTAMP NOT NULL,
	ACTIVE BOOLEAN DEFAULT 1,
	CONSTRAINT FK_ARTICLES_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

-- DROP TABLE IF EXISTS ARTICLE_CONTENTS;
-- CREATE TABLE ARTICLE_CONTENTS

DROP TABLE IF EXISTS CATEGORY;
CREATE TABLE CATEGORY(
	ID SERIAL,
	USER_ID BIGINT UNSIGNED NOT NULL,
	NAME VARCHAR(20) NOT NULL,
	CONSTRAINT FK_CATEGORY_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

DROP TABLE IF EXISTS CATEGORY_MAP;
CREATE TABLE CATEGORY_MAP(

	ID SERIAL,
	ARTICLE_ID BIGINT UNSIGNED NOT NULL,
	CATEGORY_ID BIGINT UNSIGNED NOT NULL,
	CONSTRAINT FK_CATEGORY_MAP_ARTICLE_ID FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLES(ID),
	CONSTRAINT FK_CATEGORY_MAP_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(ID)
);

DROP TABLE IF EXISTS COMMENTS;
CREATE TABLE COMMENTS(

	ID SERIAL,
	ARTICLE_ID BIGINT UNSIGNED NOT NULL,
	USER_ID BIGINT UNSIGNED NOT NULL,
	COMMENTS VARCHAR(100) NOT NULL,
	CONSTRAINT FK_COMMENTS_ARTICLE_ID FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLES(ID),
	CONSTRAINT FK_COMMENTS_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

DROP TABLE IF EXISTS RATTINGS;
CREATE TABLE RATTINGS(

	ID SERIAL,
	USER_ID BIGINT UNSIGNED NOT NULL,
	ARTICLE_ID BIGINT UNSIGNED NOT NULL,
	RATTING TINYINT NOT NULL,
	CONSTRAINT UNIQUE UQ_RATTINGS_USER_ARTICLE_ID (USER_ID, ARTICLE_ID),
	CONSTRAINT FK_RATTINGS_ARTICLE_ID FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLES(ID),
	CONSTRAINT FK_RATTINGS_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS(ID)

);